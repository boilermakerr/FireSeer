#获取平均的检测框面积，并去除掉异常的检测框

from floor_classification_tools import get_average_box_area_delect_default_box,is_same_row




# main floor classification method
def group_detections_by_floor(detections, threshold_factor=0.5, limit_number=0):
    detections = sorted(detections, key=lambda det: det[1])

    floors = []


    if len(detections) != 0:
        average_box_area, detections = get_average_box_area_delect_default_box(detections)



    while detections:
        current_floor = []
        base_box = detections[0]

        to_remove = []
        for box in detections:

            if is_same_row(base_box, box, threshold_factor):
                current_floor.append(box)
                to_remove.append(box)
            else:
                break

        for box in to_remove:
            detections.remove(box)

        if len(current_floor) <= limit_number:
            continue

        current_floor = sorted(current_floor, key=lambda det: det[0])
        floors.append(current_floor)


    return floors[::-1]  # 翻转以得到从下到上的楼层顺序

if __name__=="__main__":
    detections=[[280, 406, 281, 415], [258, 404, 277, 422], [237, 402, 256, 421], [217, 401, 235, 419], [196, 400, 214, 418], [176, 399, 194, 416], [259, 383, 277, 400], [238, 381, 256, 399], [218, 380, 235, 398], [197, 379, 214, 397], [177, 378, 194, 395], [259, 361, 277, 379], [238, 360, 256, 378], [218, 359, 235, 376], [197, 358, 214, 376], [177, 357, 194, 374], [384, 344, 400, 361], [325, 344, 357, 356], [362, 343, 380, 359], [302, 342, 320, 357], [281, 341, 298, 355], [259, 340, 277, 357], [238, 339, 256, 357], [218, 338, 235, 355], [197, 337, 214, 355], [177, 336, 194, 353], [497, 328, 517, 342], [474, 326, 493, 340], [451, 325, 470, 334], [428, 325, 448, 342], [406, 323, 425, 342], [384, 322, 402, 341], [362, 322, 380, 339], [325, 322, 357, 340], [302, 320, 320, 339], [281, 320, 298, 337], [259, 319, 277, 336], [238, 317, 256, 335], [218, 317, 235, 334], [197, 316, 214, 334], [177, 315, 194, 332], [497, 305, 517, 323], [474, 304, 493, 323], [451, 303, 470, 322], [428, 303, 448, 320], [406, 301, 425, 320], [384, 300, 402, 319], [362, 300, 380, 317], [325, 300, 357, 319], [302, 299, 320, 317], [281, 299, 298, 316], [259, 297, 277, 314], [238, 296, 256, 314], [218, 296, 235, 313], [197, 295, 214, 312], [177, 295, 194, 311], [497, 283, 517, 301], [474, 282, 493, 301], [451, 281, 470, 299], [428, 281, 448, 298], [406, 280, 425, 298], [325, 279, 357, 297], [384, 278, 402, 297], [362, 278, 380, 295], [302, 277, 320, 295], [281, 277, 298, 294], [259, 276, 277, 293], [238, 275, 256, 293], [218, 275, 235, 292], [197, 274, 214, 291], [177, 274, 194, 290], [497, 261, 517, 278], [474, 260, 493, 278], [451, 259, 470, 277], [428, 259, 448, 276], [406, 258, 425, 276], [384, 257, 402, 275], [362, 257, 380, 274], [325, 257, 357, 275], [302, 256, 320, 274], [281, 256, 298, 273], [259, 255, 277, 272], [238, 254, 256, 271], [218, 254, 235, 270], [197, 253, 214, 270], [177, 253, 194, 269], [497, 238, 517, 256], [474, 238, 493, 256], [451, 237, 470, 255], [428, 237, 448, 254], [406, 236, 425, 254], [384, 235, 402, 253], [362, 235, 380, 252], [325, 235, 357, 253], [302, 235, 320, 252], [281, 235, 298, 251], [259, 234, 277, 250], [238, 233, 256, 250], [218, 233, 235, 249], [197, 232, 214, 249], [177, 232, 194, 248], [497, 216, 517, 234], [474, 215, 493, 234], [451, 214, 470, 233], [428, 214, 448, 232], [406, 214, 425, 232], [384, 213, 402, 231], [362, 213, 380, 230], [325, 213, 357, 231], [302, 213, 320, 231], [281, 213, 298, 230], [259, 212, 277, 229], [238, 211, 256, 229], [218, 211, 235, 228], [197, 211, 214, 228], [177, 211, 194, 227], [497, 194, 517, 211], [474, 193, 493, 211], [451, 192, 470, 211], [428, 192, 448, 210], [406, 192, 425, 210], [281, 192, 298, 208], [384, 191, 402, 209], [362, 191, 380, 208], [325, 191, 357, 209], [302, 191, 320, 209], [259, 191, 277, 208], [238, 190, 256, 208], [218, 190, 235, 207], [197, 190, 214, 207], [177, 190, 194, 206], [497, 171, 517, 189], [474, 170, 493, 189], [451, 170, 470, 188], [428, 170, 448, 188], [406, 170, 425, 188], [302, 170, 320, 188], [281, 170, 298, 187], [384, 169, 402, 187], [362, 169, 380, 187], [325, 169, 357, 187], [259, 169, 277, 186], [238, 169, 256, 187], [218, 169, 235, 186], [177, 169, 194, 185], [197, 168, 214, 186], [497, 149, 517, 166], [281, 149, 298, 166], [474, 148, 493, 166], [451, 148, 471, 166], [428, 148, 449, 166], [302, 148, 320, 166], [259, 148, 278, 165], [238, 148, 257, 165], [218, 148, 236, 165], [177, 148, 195, 164], [406, 147, 426, 166], [384, 147, 403, 165], [362, 147, 381, 165], [325, 147, 358, 165], [197, 147, 215, 165]]
    floors = group_detections_by_floor(detections)
    print(floors)